{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport 'flatpickr/dist/flatpickr.css';\n\nconst startBtn = document.querySelector('.btn-start');\nconst timer = document.querySelector('.timer');\n\nlet userSelectedDate = null;\n\nflatpickr(\"#datetime-picker\", {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n    onClose(selectedDates) {\n      userSelectedDate = selectedDates[0];\n    },\n});\n\nlet intervalId;\n\nstartBtn.addEventListener('click', (event) => {\n  const initTime = event.target.value;\n\n  startBtn.disabled = true;\n\n  intervalId = setInterval(() => {\n    const currentTime = Date.now();\n    const remainingTime = initTime - currentTime;\n    const time = convertMs(remainingTime);\n    const str = getTime(time);\n\n    timer.innerHTML = str;\n  }, 1000);\n\n  setTimeout(() => {\n    clearInterval(intervalId);\n    startBtn.disabled = false;\n  }, initTime - Date.now() - 1000)\n});\n\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction getTime({ days, hours, minutes, seconds }) {\n  days = days.toString();\n  hours = hours.toString();\n  minutes = minutes.toString();\n  seconds = seconds.toString();\n\n  return `${days}:${hours}:${minutes}:${seconds}`;\n}\n\nfunction formatTimeComponent(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  timerDisplay.textContent = `${formatTimeComponent(days)}:${formatTimeComponent(hours)}:${formatTimeComponent(minutes)}:${formatTimeComponent(seconds)}`;\n}\n"],"names":["startBtn","timer","flatpickr","selectedDates","intervalId","event","initTime","currentTime","remainingTime","time","convertMs","str","getTime","ms","days","hours","minutes","seconds"],"mappings":"wIAGA,MAAMA,EAAW,SAAS,cAAc,YAAY,EAC9CC,EAAQ,SAAS,cAAc,QAAQ,EAI7CC,EAAU,mBAAoB,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACf,QAAQC,EAAe,CACFA,EAAc,CAAC,CACnC,CACL,CAAC,EAED,IAAIC,EAEJJ,EAAS,iBAAiB,QAAUK,GAAU,CAC5C,MAAMC,EAAWD,EAAM,OAAO,MAE9BL,EAAS,SAAW,GAEpBI,EAAa,YAAY,IAAM,CAC7B,MAAMG,EAAc,KAAK,MACnBC,EAAgBF,EAAWC,EAC3BE,EAAOC,EAAUF,CAAa,EAC9BG,EAAMC,EAAQH,CAAI,EAExBR,EAAM,UAAYU,CACnB,EAAE,GAAI,EAEP,WAAW,IAAM,CACf,cAAcP,CAAU,EACxBJ,EAAS,SAAW,EACrB,EAAEM,EAAW,KAAK,IAAG,EAAK,GAAI,CACjC,CAAC,EAGD,SAASI,EAAUG,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAQ,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAClD,OAAAH,EAAOA,EAAK,WACZC,EAAQA,EAAM,WACdC,EAAUA,EAAQ,WAClBC,EAAUA,EAAQ,WAEX,GAAGH,CAAI,IAAIC,CAAK,IAAIC,CAAO,IAAIC,CAAO,EAC/C"}